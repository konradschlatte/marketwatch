{"ast":null,"code":"import _classCallCheck from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/konradschlatte/new_projects/marketwatch/client/src/Chart.js\";\nimport * as React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport apiCall from './apiCall';\nimport movingAverage from './analyseData';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      data: [],\n      legend: ''\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      apiCall.call(this.props.uri).then(function (result) {\n        return result.json();\n      }).then(function (result) {\n        var openData = result.map(function (item) {\n          return item.open;\n        });\n        var labelData = result.map(function (item) {\n          return item.label;\n        });\n        var movingAverage30 = movingAverage(openData, 30);\n\n        _this2.setState({\n          allData: result,\n          openData: openData,\n          labelData: labelData,\n          movingAverage30: movingAverage30,\n          legend: _this2.props.legend\n        });\n      }).catch(function (error) {\n        return 'sorry there is an error';\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = {\n        datasets: [{\n          borderColor: ['#FF6384'],\n          data: this.state.openData,\n          label: this.state.legend,\n          maintainAspectRatio: true,\n          responsive: true\n        }, {\n          borderColor: ['#CCCCB3'],\n          data: this.state.movingAverage30,\n          //label: this.state.legend,\n          maintainAspectRatio: true,\n          responsive: true\n        }],\n        labels: this.state.labelData\n      };\n      var options = {\n        legend: {\n          position: 'bottom'\n        }\n      };\n      return React.createElement(\"div\", {\n        style: {\n          height: '300px',\n          width: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"delete\",\n        onClick: this.props.delEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"delete\"));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["/Users/konradschlatte/new_projects/marketwatch/client/src/Chart.js"],"names":["React","Line","apiCall","movingAverage","Chart","props","state","data","legend","call","uri","then","result","json","openData","map","item","open","labelData","label","movingAverage30","setState","allData","catch","error","datasets","borderColor","maintainAspectRatio","responsive","labels","options","position","height","width","delEvent","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,eAA1B;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAFiB;AAMlB;;;;wCACmB;AAAA;;AAChBN,MAAAA,OAAO,CAACO,IAAR,CAAa,KAAKJ,KAAL,CAAWK,GAAxB,EACCC,IADD,CACM,UAACC,MAAD;AAAA,eAAYA,MAAM,CAACC,IAAP,EAAZ;AAAA,OADN,EAECF,IAFD,CAEM,UAACC,MAAD,EAAY;AAChB,YAAME,QAAQ,GAAGF,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD;AAAA,iBAAWA,IAAI,CAACC,IAAhB;AAAA,SAAX,CAAjB;AACA,YAAMC,SAAS,GAAGN,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD;AAAA,iBAAWA,IAAI,CAACG,KAAhB;AAAA,SAAX,CAAlB;AACA,YAAMC,eAAe,GAAGjB,aAAa,CAACW,QAAD,EAAW,EAAX,CAArC;;AACA,QAAA,MAAI,CAACO,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEV,MAAX;AACEE,UAAAA,QAAQ,EAAEA,QADZ;AAEEI,UAAAA,SAAS,EAAEA,SAFb;AAGEE,UAAAA,eAAe,EAAEA,eAHnB;AAIEZ,UAAAA,MAAM,EAAE,MAAI,CAACH,KAAL,CAAWG;AAJrB,SAAd;AAMA,OAZF,EAaCe,KAbD,CAaO,UAACC,KAAD,EAAW;AACf,eAAO,yBAAP;AACF,OAfD;AAgBH;;;6BACQ;AACP,UAAMjB,IAAI,GAAG;AACTkB,QAAAA,QAAQ,EAAE,CACR;AACFC,UAAAA,WAAW,EAAE,CACT,SADS,CADX;AAIFnB,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWQ,QAJf;AAKFK,UAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,MALhB;AAMFmB,UAAAA,mBAAmB,EAAE,IANnB;AAOFC,UAAAA,UAAU,EAAE;AAPV,SADQ,EAUV;AACAF,UAAAA,WAAW,EAAE,CACT,SADS,CADb;AAIAnB,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWc,eAJjB;AAKA;AACAO,UAAAA,mBAAmB,EAAE,IANrB;AAOAC,UAAAA,UAAU,EAAE;AAPZ,SAVU,CADD;AAuBTC,QAAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWY;AAvBV,OAAb;AAyBA,UAAMY,OAAO,GAAG;AACdtB,QAAAA,MAAM,EAAE;AACNuB,UAAAA,QAAQ,EAAE;AADJ;AADM,OAAhB;AAKA,aACG;AAAK,QAAA,KAAK,EAAG;AAAEC,UAAAA,MAAM,EAAC,OAAT;AAAkBC,UAAAA,KAAK,EAAC;AAAxB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAG1B,IAAb;AAAoB,QAAA,OAAO,EAAGuB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAK,KAAKzB,KAAL,CAAW6B,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,CADH;AAOD;;;;EAhEgClC,KAAK,CAACmC,S;;SAApB/B,K","sourcesContent":["import * as React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport apiCall from './apiCall';\nimport movingAverage from './analyseData';\n\nexport default class Chart extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        data: [],\n        legend: '',\n    };\n  }\n  componentDidMount() {\n      apiCall.call(this.props.uri)\n      .then((result) => result.json())\n      .then((result) => {\n        const openData = result.map((item) => (item.open));\n        const labelData = result.map((item) => (item.label));\n        const movingAverage30 = movingAverage(openData, 30);\n        this.setState({ allData: result,\n                        openData: openData,\n                        labelData: labelData,\n                        movingAverage30: movingAverage30,\n                        legend: this.props.legend\n                      });\n       })\n      .catch((error) => {\n         return 'sorry there is an error'\n      });\n  }\n  render() {\n    const data = {\n        datasets: [\n          {\n        borderColor: [\n            '#FF6384'\n          ],\n        data: this.state.openData,\n        label: this.state.legend,\n        maintainAspectRatio: true,\n        responsive: true,\n        },\n        {\n        borderColor: [\n            '#CCCCB3'\n          ],\n        data: this.state.movingAverage30,\n        //label: this.state.legend,\n        maintainAspectRatio: true,\n        responsive: true,\n        }\n\n\n    ],\n        labels: this.state.labelData\n    };\n    const options = {\n      legend: {\n        position: 'bottom',\n      }\n    };\n    return (\n       <div style={ { height:'300px', width:'500px' } }>\n        <Line data={ data } options={ options }/>\n        <button id=\"delete\" onClick = { this.props.delEvent }>delete</button>\n       </div>\n      )\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}