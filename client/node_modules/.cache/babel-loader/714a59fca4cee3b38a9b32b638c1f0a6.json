{"ast":null,"code":"import _classCallCheck from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/konradschlatte/new_projects/marketwatch/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/konradschlatte/new_projects/marketwatch/client/src/Chart.js\";\nimport * as React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport apiCall from './apiCall';\nimport movingAverage from './analyseData';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      data: [],\n      legend: '',\n      ma1: '',\n      ma2: ''\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      apiCall.call(this.props.uri).then(function (result) {\n        return result.json();\n      }).then(function (result) {\n        _this2.setState({\n          data: result,\n          legend: _this2.props.legend,\n          ma1: _this2.props.ma1,\n          ma2: _this2.props.ma2\n        });\n      }).catch(function (error) {\n        return 'sorry there is an error';\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var openData = this.state.data.map(function (item) {\n        return item.open;\n      });\n      var labelData = this.state.data.map(function (item) {\n        return item.label;\n      });\n      var rawData = this.state.data.map(function (item) {\n        return item.open;\n      });\n      var movingAverage30 = movingAverage(rawData, 30);\n      var length = movingAverage30.length;\n      var openObject = openData.map(function (item, i) {\n        return {\n          x: labelData[i],\n          y: item\n        };\n      });\n      var movingAverage30Object = movingAverage30.map(function (item, i) {\n        return {\n          x: labelData.slice(-length)[i],\n          y: item\n        };\n      });\n      console.log(movingAverage30Object);\n      var data = {\n        datasets: [{\n          borderColor: ['#FF6384'],\n          data: openObject,\n          label: this.state.legend,\n          maintainAspectRatio: true,\n          responsive: true\n        }, {\n          borderColor: ['#CCCCB3'],\n          data: movingAverage30Object,\n          //label: this.state.legend,\n          maintainAspectRatio: true,\n          responsive: true\n        }]\n      };\n      var options = {\n        legend: {\n          position: 'bottom'\n        },\n        scales: {\n          xAxes: [{\n            type: 'time'\n          }]\n        }\n      };\n      return React.createElement(\"div\", {\n        style: {\n          height: '300px',\n          width: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: data,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"delete\",\n        onClick: this.props.delEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"delete\"));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["/Users/konradschlatte/new_projects/marketwatch/client/src/Chart.js"],"names":["React","Line","apiCall","movingAverage","Chart","props","state","data","legend","ma1","ma2","call","uri","then","result","json","setState","catch","error","openData","map","item","open","labelData","label","rawData","movingAverage30","length","openObject","i","x","y","movingAverage30Object","slice","console","log","datasets","borderColor","maintainAspectRatio","responsive","options","position","scales","xAxes","type","height","width","delEvent","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport apiCall from './apiCall';\nimport movingAverage from './analyseData';\n\nexport default class Chart extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        data: [],\n        legend: '',\n        ma1: '',\n        ma2: '',\n    };\n  }\n  componentDidMount() {\n      apiCall.call(this.props.uri)\n      .then((result) => result.json())\n      .then((result) => {\n        this.setState({ data: result,\n                        legend: this.props.legend,\n                        ma1: this.props.ma1,\n                        ma2: this.props.ma2,\n                      });\n       })\n      .catch((error) => {\n         return 'sorry there is an error'\n      });\n  }\n  render() {\n    const openData = this.state.data.map(item => item.open);\n    const labelData = this.state.data.map(item => item.label);\n    const rawData = this.state.data.map(item => item.open);\n    const movingAverage30 = movingAverage(rawData, 30);\n    const length = movingAverage30.length;\n    var openObject = openData.map((item, i) => ({ x : labelData[i], y: item }));\n    var movingAverage30Object = movingAverage30.map((item, i) => ({ x : labelData.slice(-length)[i], y: item }));\n    console.log(movingAverage30Object);\n    const data = {\n        datasets: [\n          {\n        borderColor: [\n            '#FF6384'\n          ],\n        data: openObject,\n        label: this.state.legend,\n        maintainAspectRatio: true,\n        responsive: true,\n        },\n        {\n        borderColor: [\n            '#CCCCB3'\n          ],\n        data: movingAverage30Object,\n        //label: this.state.legend,\n        maintainAspectRatio: true,\n        responsive: true,\n        }\n      ],\n    };\n    const options = {\n      legend: {\n        position: 'bottom',\n      },\n      scales: {\n      xAxes: [{\n        type: 'time'\n      }]\n    }\n    };\n    return (\n       <div style={ { height:'300px', width:'500px' } }>\n        <Line data={ data } options={ options }/>\n        <button id=\"delete\" onClick = { this.props.delEvent }>delete</button>\n       </div>\n      )\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}